{"cells":[{"cell_type":"markdown","metadata":{"id":"wD69-KvrZbnG"},"source":["# Библиотеки"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":73763,"status":"ok","timestamp":1702559661401,"user":{"displayName":"Иван","userId":"06993812618572234092"},"user_tz":-180},"id":"ZHCBc4FmCGEK","outputId":"4c8b556e-68ff-4edd-ebdc-2d95fb7b3179"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting rembg\n","  Downloading rembg-2.0.53-py3-none-any.whl (32 kB)\n","Requirement already satisfied: jsonschema in /usr/local/lib/python3.10/dist-packages (from rembg) (4.19.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from rembg) (1.23.5)\n","Collecting onnxruntime (from rembg)\n","  Downloading onnxruntime-1.16.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.4/6.4 MB\u001b[0m \u001b[31m15.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: opencv-python-headless in /usr/local/lib/python3.10/dist-packages (from rembg) (4.8.1.78)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from rembg) (9.4.0)\n","Requirement already satisfied: pooch in /usr/local/lib/python3.10/dist-packages (from rembg) (1.8.0)\n","Collecting pymatting (from rembg)\n","  Downloading PyMatting-1.1.12-py3-none-any.whl (52 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m53.0/53.0 kB\u001b[0m \u001b[31m5.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: scikit-image in /usr/local/lib/python3.10/dist-packages (from rembg) (0.19.3)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from rembg) (1.11.4)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from rembg) (4.66.1)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema->rembg) (23.1.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema->rembg) (2023.11.2)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema->rembg) (0.31.1)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema->rembg) (0.13.2)\n","Collecting coloredlogs (from onnxruntime->rembg)\n","  Downloading coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m46.0/46.0 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: flatbuffers in /usr/local/lib/python3.10/dist-packages (from onnxruntime->rembg) (23.5.26)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from onnxruntime->rembg) (23.2)\n","Requirement already satisfied: protobuf in /usr/local/lib/python3.10/dist-packages (from onnxruntime->rembg) (3.20.3)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from onnxruntime->rembg) (1.12)\n","Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.10/dist-packages (from pooch->rembg) (4.1.0)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from pooch->rembg) (2.31.0)\n","Requirement already satisfied: numba!=0.49.0 in /usr/local/lib/python3.10/dist-packages (from pymatting->rembg) (0.58.1)\n","Requirement already satisfied: networkx>=2.2 in /usr/local/lib/python3.10/dist-packages (from scikit-image->rembg) (3.2.1)\n","Requirement already satisfied: imageio>=2.4.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image->rembg) (2.31.6)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.10/dist-packages (from scikit-image->rembg) (2023.9.26)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image->rembg) (1.5.0)\n","Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba!=0.49.0->pymatting->rembg) (0.41.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->rembg) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->rembg) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->rembg) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->pooch->rembg) (2023.11.17)\n","Collecting humanfriendly>=9.1 (from coloredlogs->onnxruntime->rembg)\n","  Downloading humanfriendly-10.0-py2.py3-none-any.whl (86 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m86.8/86.8 kB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->onnxruntime->rembg) (1.3.0)\n","Installing collected packages: humanfriendly, pymatting, coloredlogs, onnxruntime, rembg\n","Successfully installed coloredlogs-15.0.1 humanfriendly-10.0 onnxruntime-1.16.3 pymatting-1.1.12 rembg-2.0.53\n"]}],"source":["%pip install rembg\n","from rembg import remove\n","import gdown\n","import os\n","from os import listdir\n","from zipfile import ZipFile\n","import numpy as np\n","from google.colab import files\n","from PIL import Image\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"markdown","metadata":{"id":"WtEXKskFVhk7"},"source":["# Def"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8CZZk9kIS4bx"},"outputs":[],"source":["def process_images(input_folder, output_folder):\n","    # Получаем список всех файлов во входной папке\n","    for root, dirs, files in os.walk(input_folder):\n","        for file_name in files:\n","            try:\n","                # Составляем полный путь к входному файлу\n","                input_path = os.path.join(root, file_name)\n","\n","                # Загружаем входное изображение\n","                input_image = Image.open(input_path)\n","\n","                # Удаляем фон\n","                output_image = remove(input_image)\n","\n","                # Составляем полный путь к выходному файлу\n","                output_path = os.path.join(output_folder, os.path.relpath(input_path, input_folder))\n","\n","                # Создаем папку для выходного файла, если её нет\n","                os.makedirs(os.path.dirname(output_path), exist_ok=True)\n","\n","                # Сохраняем выходное изображение\n","                output_image.save(output_path)\n","\n","                print(f\"Фон успешно удален для: {file_name}\")\n","\n","            except Exception as e:\n","                print(f\"Ошибка при обработке {file_name}: {str(e)}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WWVPFmQQOOd4"},"outputs":[],"source":["def resize_image(input_folder, output_folder):\n","  for root, dirs, files in os.walk(input_folder):\n","    for file_name in files:\n","\n","      try:\n","          # Составляем полный путь к входному файлу\n","          input_path = os.path.join(root, file_name)\n","          output_path = os.path.join(output_folder, os.path.relpath(input_path, input_folder))\n","          os.makedirs(os.path.dirname(output_path), exist_ok=True)\n","          img_file_out = output_path\n","          img = Image.open(input_path)\n","          width = img.size[0]\n","          height = img.size[1]\n","          if width >= height * max_ratio:\n","            ratio = width/height\n","            w = max_width\n","            h = int(w / ratio)\n","            if h % 2 >= 1:\n","              h += 1\n","            img_1 = Image.open(input_path).resize((int(w), int(h)))\n","            img_2 = np.array(img_1)\n","            zero = np.zeros((int(max_height),int(max_width) ,color))\n","            x1 = int((max_height - h)/2)\n","            x2 = int(max_height  - x1)\n","            zero[x1:x2, :, :] = zero[x1:x2, :, :] + img_2\n","            zero = zero.astype(np.uint8)\n","            im = Image.fromarray(zero)\n","            print(f'Разрешение файла {file_name} = {img.size}')\n","            print(f'Разрешение измененного файла = {im.size}')\n","            im.save(f'{img_file_out}')\n","          elif width < height * max_ratio:\n","            ratio = width/height\n","            h = max_height\n","            w = int(h * ratio)\n","            if w % 2 >= 1:\n","              w += 1\n","            img_1 = Image.open(input_path).resize((int(w), int(h)))\n","            img_2 = np.array(img_1)\n","            zero = np.zeros((int(max_height),int(max_width) ,color))\n","            x1 = int((max_width - w)/2)\n","            x2 = int(max_width  - x1)\n","            zero[:, x1:x2, :] = zero[:, x1:x2, :] + img_2\n","            zero = zero.astype(np.uint8)\n","            im = Image.fromarray(zero)\n","            print(f'Разрешение файла {file_name} = {img.size}')\n","            print(f'Разрешение измененного файла = {im.size}')\n","            im.save(f'{img_file_out}')\n","      except Exception as e:\n","          print(f\"Ошибка при обработке {file_name}: {str(e)}\")"]},{"cell_type":"markdown","metadata":{"id":"SHN3LqCvWBEU"},"source":["# Программа"]},{"cell_type":"markdown","metadata":{"id":"oah68luMWGfO"},"source":["## Переменные"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kZ-Z4CdP_nBB"},"outputs":[],"source":["max_width = 1280 # Ширина измененного изображения\n","max_height = 720 # Высота измененного изображения\n","max_ratio = max_width / max_height # Соотношение сторон\n","color = 3 # Количество слоёв цветов\n","input_folder = '/content/extracted_images'\n","output_folder_resize = '/content/images_resize'\n","# Необходимо ввести имя Вашего zip-файла Обязательно!!!\n","zip_file_path = 'Test.zip'"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":1220,"status":"ok","timestamp":1702559662618,"user":{"displayName":"Иван","userId":"06993812618572234092"},"user_tz":-180},"id":"NVl3Tu71ltbw","outputId":"6507affb-5a76-4110-9486-95d4e33cdbfd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Test.zip'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}],"source":["# Ссылка на архив фотографий\n","gdown.download('https://drive.google.com/u/0/uc?id=1eV4IGO_8wBGboG3wO78gy5rHR7FPoySC&export=download', None, quiet = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q9gguXQ2YDYI"},"outputs":[],"source":["extracted_folder = input_folder\n","output_folder = '/content/extracted_images_with_background_removed'\n","# Создаем папки, если их нет\n","os.makedirs(extracted_folder, exist_ok=True)\n","os.makedirs(output_folder, exist_ok=True)\n","os.makedirs(output_folder_resize, exist_ok=True)\n","\n","# Извлекаем содержимое zip-файла\n","with ZipFile(zip_file_path, 'r') as zip_ref:\n","    zip_ref.extractall(extracted_folder)"]},{"cell_type":"markdown","metadata":{"id":"wogrozxuVlqd"},"source":["## Удаление фона"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"16kScaj7S6aj"},"outputs":[],"source":["# Обрабатываем изображения в извлеченной папке\n","process_images(extracted_folder, output_folder)\n","print(\"Удаление фона завершено.\")"]},{"cell_type":"code","source":["color = 4\n","input_folder = '/content/extracted_images_with_background_removed'"],"metadata":{"id":"z1R6wRZud_Lt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ec87QJhrVrau"},"source":["## Изменение размера"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uMLxYmMMxNRs"},"outputs":[],"source":["# Если фон удалён\n","resize_image(input_folder, output_folder_resize)"]},{"cell_type":"markdown","metadata":{"id":"HuRSn6l-Vuj_"},"source":["## Формирование и скачивание zip-файла"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"elapsed":8432,"status":"ok","timestamp":1702035377068,"user":{"displayName":"Иван","userId":"06993812618572234092"},"user_tz":-180},"id":"K9YjamU5S8Ry","outputId":"947a9c5f-f539-428a-fe5e-32df13ddc6fc"},"outputs":[{"data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{},"output_type":"display_data"},{"data":{"application/javascript":["download(\"download_73ef8695-1895-4212-8bbf-7d3bbb0c91f0\", \"images_with_background_removed_resize.zip\", 146483087)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{},"output_type":"display_data"}],"source":["### download zip file to PC ###\n","\n","import shutil\n","\n","# Определите путь к папке, которую вы хотите архивировать\n","folder_path = '/content/images_resize'\n","# Определите путь для zip-файла\n","zip_file_path = f'{output_folder_resize}.zip'\n","# Создайте zip-файл\n","shutil.make_archive(zip_file_path[:-4], 'zip', output_folder_resize)\n","\n","from google.colab import files\n","# Укажите путь к zip-файлу\n","files.download(zip_file_path)"]}],"metadata":{"colab":{"provenance":[{"file_id":"10hRroPM61cmP-LCk_Pu_ku34_q4pJUAK","timestamp":1702014238608}],"authorship_tag":"ABX9TyPyZR43CFsjXlqCxha4yXYT"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}